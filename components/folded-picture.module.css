.box {
  position: relative;
  display: inline-flex;
  transform: rotateX(10deg); /*让元素围绕横坐标 (水平轴) 旋转10deg */
  transform-style: preserve-3d; /* 元素的子元素应位于 3D 空间中 */
  cursor: grab; /* 可抓取的样式 */
}

.box .img {
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 56vh;
  opacity: 0;
}

.box .a,
.box .b,
.box .c {
  top: 0;
  display: inline-block;
  height: 100%;
  background-image: var(--bg);
  background-size: cover; /*设置背景图的大小该背景图以它的全部宽或者高覆盖所在容器。当容器和背景图大小不同时，背景图的 左/右 或者 上/下 部分会被裁剪*/
  background-repeat: no-repeat;
}

.box .a {
  position: absolute;
  left: 0;
  width: 50%;
  background-position: 0 0; /*背景图的位置*/
}

.box .bc {
  position: absolute;
  display: inline-flex;
  width: 50%;
  height: 100%;
  left: 50%;
  transform-origin: left;
  transition: transform 3s;
  transform-style: preserve-3d; /*b c块需要在3D空间显示*/
}

.box .b,
.box .c {
  position: relative;
  width: 50%; /*b c 宽度各占百分之50%*/
  backface-visibility: hidden; /*元素背面朝向观察者时是否可见*/
}

.box .b {
  background-position: 66.666667% 0; /*为每一个背景图片设置初始位置。这个位置是相对于由 background-origin 定义的位置图层的。*/
  transform-style: preserve-3d; /*让其伪元素或者内容节点在3D空间显示 灰色区域*/
}

.box .b:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #555;
  /* 伪元素绕y轴中心旋转180deg */
  transform: rotateY(180deg) translateZ(1px);
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.box .c {
  background-position: 100% 0;
  transform-origin: left;
  transition: transform 2s;
}

/* bc一起绕y轴旋转-180deg */
.box:hover .bc,
.box:active .bc {
  transform: rotateY(-180deg) translateZ(-1px);
  transition: transform 2s;
}

/* c绕y旋转180deg 综合下来就是没有0deg 动画有时差，就能看见中间的动画了*/
.box:hover .c,
.box:active .c {
  transform: rotateY(180deg) translateZ(2px);
  transition: transform 3s;
}
